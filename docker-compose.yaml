version: '3'
services:
  # PostgreSQL database
  postgres:
    profiles:
      - ''
      - 'mlflow'
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mlflow}
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  # MinIO server
  minio:
    profiles:
      - ''
      - 'mlflow'
    image: minio/minio
    expose:
      - "9000"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID:-minioadmin}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY:-minioadmin}
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 1s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data
  minio-create-bucket:
      image: minio/mc
      depends_on:
        minio:
          condition: service_healthy
      entrypoint: >
        bash -c "
        mc alias set minio http://minio:9000 ${AWS_ACCESS_KEY_ID:-minioadmin} ${AWS_SECRET_ACCESS_KEY:-minioadmin} &&
        if ! mc ls minio | grep --quiet bucket; then
          mc mb minio/${AWS_BUCKET:-mlruns}
        else
          echo 'bucket already exists'
        fi
        "